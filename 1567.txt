1567. Maximum Length of Subarray With Positive Product

int getMaxLen(int* nums, int numsSize){
    int result = 0, n = 0, m = 0, tmp = 0;
    for(int i = 0; i < numsSize; i++) {
        if(nums[i] == 0) n = m = 0;
        else {
            if(nums[i] > 0) {
                n++;
                if(m > 0) m++;
            } else {
                if(m > 0) m++;
                n++;
                tmp = n;
                n = m;
                m = tmp;
            }
            if(n > result) result = n;
        }
    }
    return result;
} 

----------------------------------------------------

*Explain:
index  0  1   2   3   4 
      [0, 1, -2, -3, -4]
m      0  1   0   3   2
n      0  0   2   1   4

*Description
Given an array of integers nums, find the maximum length 
of a subarray where the product of all its elements
is positive. A subarray of an array is a consecutive 
sequence of zero or more values taken out of that array.
Return the maximum length of a subarray with positive 
product.
